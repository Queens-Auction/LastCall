name: CI

on:
  pull_request:
    branches: [ dev ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: auction
        ports:
          - 3306:3306
        options: >-
          --health-cmd="bash -lc 'mysqladmin ping -h 127.0.0.1 -uroot -p\"$${MYSQL_ROOT_PASSWORD}\" || exit 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s

      mailhog:
        image: mailhog/mailhog:latest
        ports:
          - 1025:1025
          - 8025:8025

    env:
      SPRING_PROFILES_ACTIVE: test
      # JWT (match `jwt.secret`, `jwt.expiration` in application.yml)
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: 86400000
      # If some code expects JWT_SECRET_KEY, set both
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -p"$DB_PASSWORD" >/dev/null 2>&1; then
              echo "MySQL is up"; exit 0
            fi
            echo "Waiting for MySQL... ($i/60)"; sleep 2
          done
          echo "MySQL did not become ready in time"; exit 1

      - name: Run tests with coverage check
        env:
          # Override application.yml for CI (use service MySQL + MailHog)
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/auction?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}

          # MailHog instead of Gmail in CI
          SPRING_MAIL_HOST: 127.0.0.1
          SPRING_MAIL_PORT: 1025
          SPRING_MAIL_USERNAME: ""
          SPRING_MAIL_PASSWORD: ""
          SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: false
          SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: false

          # Optional: reduce JPA noise in CI logs
          LOGGING_LEVEL_ORG_HIBERNATE_SQL: info
        run: ./gradlew clean check -Dspring.profiles.active=test --no-daemon
